<!DOCTYPE html>
<html lang="en">

<%- include('./partials/header.ejs') %>

<body>
<div class="blogs-page">

    <%- include('./partials/nav.ejs') %>
    
    <%- include('./partials/search.ejs') %>

    <ul class="tabs">
        <li class="tab active"><span>All Blogs</span></li>
        <li class="tab">Xbox</li>
        <li class="tab">PlayStation</li>
        <li class="tab">Nintendo</li>
        <li class="tab">PC</li>
    </ul>
    <section class="blog-page-cont">
        <svg>
            <defs>
                <linearGradient id="linear" x1="0%" y1="0%" x2="100%" y2="100%">
                  <stop offset="0%"   stop-color="#01d3c1"/>
                  <stop offset="100%" stop-color="#cc01aa"/>
                </linearGradient>
            </defs>
            <circle>
            </circle>
        </svg>
    </section>

</div>

<%- include('./partials/footer.ejs') %>

<script src="https://unpkg.com/ionicons@4.5.10-0/dist/ionicons.js"></script>
<script src="functions.js"></script>
<script>

    const tabs = document.querySelectorAll(".tab")
    const container = document.querySelector(".blog-page-cont")
    const recentArticleContainer = document.querySelector(".recent-blogs-box")

    let storedCategory = sessionStorage.getItem('category').toLowerCase() || "allblogs";

    tabs.forEach(tab => {
        tab.addEventListener("click", function() {
            for (let i = 0; i < tabs.length; i++) {
                const element = tabs[i];
                element.classList.remove("active");
                element.style.color = "black"
            }
            this.classList.add("active");
            switch (this.innerText) {
                case "Xbox":
                    this.style.color = "green"
                    break;
                case "PlayStation":
                    this.style.color = "blue"
                    break;
                case "Nintendo":
                    this.style.color = "red"
                    break;
                case "PC":
                    this.style.color = "black"
                    break;
                default:
                    break;
            }
            
            const blogSpinner = container.firstElementChild;
            container.innerHTML = "";
            container.appendChild(blogSpinner);
            container.firstElementChild.style.display = "block";

            fetch(`/blogs/category/${this.innerText.toLowerCase().split(" ").join("")}`)
                .then(blob => blob.json())
                .then(data => {
                    container.firstElementChild.style.display = "none";
                    data.forEach(data => {
                    const parent = document.createElement("div")
                    const subParent1 = document.createElement("div")
                    const subParent2 = document.createElement("div")
                    const img = document.createElement("img")
                    const title = document.createElement("a")
                    const date = document.createElement("p")
                    const snippet = document.createElement("span")
                    const icon = document.createElement("i")

                    title.setAttribute("href", `/blogs/${data._id}`)

                    parent.classList.add("blog-item");
                    subParent1.classList.add("sub-parent-1");
                    subParent2.classList.add("sub-parent-2");

                    img.src = data.hero;
                    title.innerText = data.title;
                    date.innerText = `Published: ${data.createdAt}`;
                    snippet.innerText = data.blogSect1;

                    switch (data.category) {
                        case 'Xbox':
                            parent.style.borderRight = "5px solid green";
                            parent.style.borderRadius = "5px";
                            icon.classList.add("fab", "fa-xbox");
                            break;
                        case 'Playstation':
                            parent.style.borderRight = "5px solid blue";
                            parent.style.borderRadius = "5px";
                            icon.style.color = "blue";
                            icon.style.right = "10px";
                            icon.classList.add("fab", "fa-playstation");
                            break;
                        case 'Nintendo':
                            const filter = "brightness(50%) sepia(1)  hue-rotate(-49deg) saturate(5000%) brightness(100%)"
                            parent.style.borderRight = "5px solid red";
                            parent.style.borderRadius = "5px";
                            icon.style.filter = filter;
                            icon.style.webkitFilter = filter;
                            icon.style.backgroundImage = "url(https://img.icons8.com/ios-filled/30/ffffff/nintendo-switch-logo.png)";
                            break;
                        case 'PC':
                            parent.style.borderRight = "5px solid black";
                            parent.style.borderRadius = "5px";
                            icon.style.filter = "invert(100%)";
                            icon.style.backgroundImage = "url(https://img.icons8.com/external-flatart-icons-outline-flatarticons/30/ffffff/external-pc-tower-devices-flatart-icons-outline-flatarticons.png)";
                            break;
                        default:
                            break;
                    }

                    parent.appendChild(subParent1);
                    parent.appendChild(subParent2);
                    subParent1.appendChild(img);
                    subParent2.appendChild(title);
                    subParent2.appendChild(date);
                    subParent2.appendChild(snippet);
                    subParent2.appendChild(icon);

                    container.appendChild(parent)
                })
                })
                .catch(e => console.log(e))
            })
        });

    window.addEventListener("load", () => {
        for (let i = 0; i < tabs.length; i++) {
            const element = tabs[i];
            element.classList.remove("active");
            element.style.color = "black";
            if (element.innerText.toLowerCase() === storedCategory) {
                element.classList.add('active');
                switch (element.innerText) {
                case "Xbox":
                    element.style.color = "green"
                    break;
                case "PlayStation":
                    element.style.color = "blue"
                    break;
                case "Nintendo":
                    element.style.color = "red"
                    break;
                case "PC":
                    element.style.color = "black"
                    break;
                default:
                    break;
                }
            }
        }
        fetch(`/blogs/category/${storedCategory}`)
            .then(blob => blob.json())
            .then(data => {
                container.firstElementChild.style.display = "none";
                data.forEach(data => {
                    const parent = document.createElement("div")
                    const subParent1 = document.createElement("div")
                    const subParent2 = document.createElement("div")
                    const img = document.createElement("img")
                    const title = document.createElement("a")
                    const date = document.createElement("p")
                    const snippet = document.createElement("span")
                    const icon = document.createElement("i")

                    title.setAttribute("href", `/blogs/${data._id}`)

                    parent.classList.add("blog-item");
                    subParent1.classList.add("sub-parent-1");
                    subParent2.classList.add("sub-parent-2");

                    img.src = data.hero;
                    title.innerText = data.title;
                    date.innerText = `Published: ${data.createdAt}`;
                    snippet.innerText = data.blogSect1;

                    switch (data.category) {
                        case 'Xbox':
                            parent.style.borderRight = "5px solid green";
                            parent.style.borderRadius = "5px";
                            icon.classList.add("fab", "fa-xbox");
                            break;
                        case 'Playstation':
                            parent.style.borderRight = "5px solid blue";
                            parent.style.borderRadius = "5px";
                            icon.style.color = "blue";
                            icon.style.right = "10px";
                            icon.classList.add("fab", "fa-playstation");
                            break;
                        case 'Nintendo':
                            const filter = "brightness(50%) sepia(1)  hue-rotate(-49deg) saturate(5000%) brightness(100%)"
                            parent.style.borderRight = "5px solid red";
                            parent.style.borderRadius = "5px";
                            icon.style.filter = filter;
                            icon.style.webkitFilter = filter;
                            icon.style.backgroundImage = "url(https://img.icons8.com/ios-filled/30/ffffff/nintendo-switch-logo.png)";
                            break;
                        case 'PC':
                            parent.style.borderRight = "5px solid black";
                            parent.style.borderRadius = "5px";
                            icon.style.filter = "invert(100%)";
                            icon.style.backgroundImage = "url(https://img.icons8.com/external-flatart-icons-outline-flatarticons/30/ffffff/external-pc-tower-devices-flatart-icons-outline-flatarticons.png)";
                            break;
                        default:
                            break;
                    }

                    parent.appendChild(subParent1);
                    parent.appendChild(subParent2);
                    subParent1.appendChild(img);
                    subParent2.appendChild(title);
                    subParent2.appendChild(date);
                    subParent2.appendChild(snippet);
                    subParent2.appendChild(icon);

                    container.appendChild(parent);
                })
            })
            .catch(e => console.log(e));
        })
        
</script>
</body>
</html>